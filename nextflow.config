/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    nf-core/cooccurence Nextflow config file
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Default config options for all compute environments
----------------------------------------------------------------------------------------
*/

// Global default params, used in configs
params {

    // TODO nf-core: Specify your pipeline's command line flags
    // Input options
    input                      = null

    // Boilerplate options
    outdir                     = null
    tracedir                   = "${params.outdir}/pipeline_info"
    publish_dir_mode           = 'copy'
    plaintext_email            = false
    monochrome_logs            = false
    hook_url                   = null
    help                       = false
    validate_params            = true
    show_hidden_params         = false
    schema_ignore_params       = 'genomes'
    enable_conda               = false

    // Max resource options
    // Defaults only, expecting to be overwritten
    max_memory                 = '128.GB'
    max_cpus                   = 16
    max_time                   = '240.h'

    
    dir = "example"
    files = [
    dir + "/genes.gff",
    dir + "/promoters.gff",
    dir + "/terminators.gff"
]

    bedtools_default_parameters = "-s"
    bedtools_k = 15
    bedtools_global = ""
    default_distance = 1000

    config = params.dir + "/example.config"
    tag = "example_run_RegulonDB_C"
    min_comb_freq = 0.2

}

profiles {
    debug { process.beforeScript = 'echo $HOSTNAME' }
    docker {
        docker.enabled         = true
        docker.userEmulation   = true
    }
    test      { includeConfig 'conf/test.config'      }
    test_full { includeConfig 'conf/test_full.config' }
}


env {
    PYTHONNOUSERSITE = 1
    R_PROFILE_USER   = "/.Rprofile"
    R_ENVIRON_USER   = "/.Renviron"
}

// Capture exit codes from upstream processes when piping
process.shell = ['/bin/bash', '-euo', 'pipefail']

def trace_timestamp = new java.util.Date().format( 'yyyy-MM-dd_HH-mm-ss')
timeline {
    enabled = false
    file    = "${params.tracedir}/execution_timeline_${trace_timestamp}.html"
}
//report {
//    enabled = true
 //   file    = "${params.tracedir}/execution_report_${trace_timestamp}.html"
//}
trace {
    enabled = false
    file    = "${params.tracedir}/execution_trace_${trace_timestamp}.txt"
}
dag {
    enabled = false
    file    = "${params.tracedir}/pipeline_dag_${trace_timestamp}.html"
}

manifest {
    name            = 'nf-core/cooccurence'
    author          = ''
    homePage        = 'https://github.com/nf-core/cooccurence'
    description     = ''
    mainScript      = 'main.nf'
    nextflowVersion = '!>=21.10.3'
    version         = '1.0dev'
    doi             = ''
}
